---
- hosts: loadbalancers
  tasks:
    - name: Include environment vairables for infrastructure hosts
      include_vars:
        file: /etc/ansible/group_vars/all.yml
        name: env_details
    - name: Install haproxy
      yum:
        name: haproxy
        state: latest
    - name: Create haproxy template
      blockinfile:
        dest: /etc/haproxy/haproxy.cfg
        create: yes
        block: |
          frontend http-in
              bind *:80
              default_backend atomic-openshift-router-http
              mode tcp
              option tcplog

          frontend  https-in
            bind *:443
            default_backend atomic-openshift-router-ssl
            mode tcp
            tcp-request  inspect-delay 5s
            tcp-request content accept if { req_ssl_hello_type 1 }

          frontend  atomic-openshift-api
            bind *:8443
            default_backend atomic-openshift-api
            mode tcp
            option tcplog

          backend atomic-openshift-router-http
              balance source
              mode tcp
            {% for ip, hostname in env_details.worker_details.items() %}
              server     {{ hostname }} {{ ip }}:80 check
            {% endfor %}

          backend atomic-openshift-router-ssl
              balance source
              mode tcp
              # maximum SSL session ID length is 32 bytes.
              stick-table type binary len 32 size 30k expire 30m
              acl clienthello req_ssl_hello_type 1
              acl serverhello rep_ssl_hello_type 2
              # use tcp content accepts to detects ssl client and server hello.
              tcp-request inspect-delay 5s
              tcp-request content accept if clienthello
              # no timeout on response inspect delay by default.
              tcp-response content accept if serverhello
              stick on payload_lv(43,1) if clienthello
              # Learn on response if server hello.
              stick store-response payload_lv(43,1) if serverhello
              option ssl-hello-chk
            {% for ip, hostname in env_details.worker_details.items() %}
              server     {{ hostname }} {{ ip }}:443 check
            {% endfor %}
          backend atomic-openshift-api
              balance source
              mode tcp
            {% for ip, hostname in env_details.master_details.items() %}
              server     {{ hostname }} {{ ip }}:8443 check
            {% endfor %}
    - name: Restart haproxy
      command: systemctl restart haproxy
    - name: Install firewalld
      yum:
        name: firewalld
        state: latest
    - name: Start firewalld
      command: systemctl unmask firewalld
    - name: Start firewalld
      command: systemctl start firewalld
    - name: Enable firewalld
      command: systemctl enable firewalld
    - name: setup firewall - http
      firewalld:
        service: http
        immediate: true
        permanent: true
        zone: public
        state: enabled
    - name: setup firewall - https
      firewalld:
        service: https
        immediate: true
        permanent: true
        zone: public
        state: enabled
    - name: setup firewall - OpenShift API
      firewalld:
        port: 8443/tcp
        immediate: true
        permanent: true
        state: enabled
        zone: public
    - name: setup firewall - Allow VRRP Adverts
      firewalld:
        rich_rule: 'rule protocol value="vrrp" accept'
        immediate: true
        permanent: true
        state: enabled
        zone: public
