- name: Increase fle descriptors
  blockinfile:
    path: /etc/security/limits.conf
    block: |
      root soft nofile 65536
      root hard nofile 65536
      * soft nofile 65536
      * hard nofile 65536
    marker: "# {mark} ANSIBLE MANAGED BLOCK - File descriptor increase for td-agent"
  become: true
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: Reboot primary CP LBs to apply file descriptor change
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Wait for connection
  wait_for_connection:
    delay: 30
    sleep: 5
    connect_timeout: 10
    timeout: 300
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Reboot secondary CP LBs to apply file descriptor change
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: inventory_hostname == groups.loadbalancers_controlplane[1]

- name: Wait for connection
  wait_for_connection:
    delay: 30
    sleep: 5
    connect_timeout: 10
    timeout: 300
  when: inventory_hostname == groups.loadbalancers_controlplane[1]

- name: install td-agent
  shell: curl -L https://toolbelt.treasuredata.com/sh/install-redhat-td-agent2.sh | sh
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: wait for install script to run
  pause:
    minutes: 1
  
- name: install gcc needed for http out plugin
  yum:
    name: gcc-c++
    state: latest
  become: true
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: install http-out plugin for td-agent
  command: td-agent-gem install fluent-plugin-out-http
  become: true
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: Setup config files for td-agent
  template:
    src: td-agent.j2
    dest: /etc/td-agent/td-agent.conf
    owner: root
    group: root
    backup: yes
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: Set td-agent daemon to run as root
  blockinfile:
    path: /etc/init.d/td-agent
    insertafter: ^TD_AGENT_OPTIONS
    block: |
      TD_AGENT_USER=root
      TD_AGENT_GROUP=root
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: Start and enable td-agent
  systemd:
    daemon_reload: yes
    name: td-agent
    state: restarted
    enabled: yes
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: Create project for in-cluster fluentd
  command: /usr/local/bin/oc new-project squid-showback
  when: inventory_hostname == groups.masters[0]

- name: Create service account for in-cluster fluentd
  command: /usr/local/bin/oc create sa fluent-squid
  when: inventory_hostname == groups.masters[0]

- name: Add privileged scc to fluentd service account
  command: /usr/local/bin/oc adm policy add-scc-to-user privileged -z fluent-squid
  when: inventory_hostname == groups.masters[0]

- name: annotate namespace so the pods are targeted to infra nodes only
  command: /usr/local/bin/oc annotate ns squid-showback openshift.io/node-selector=node-role.kubernetes.io/infra=true
  when: inventory_hostname == groups.masters[0]

- name: Add .docker.io and .docker.com for fluentd image import
  lineinfile:
    path: /etc/squid/sites.whitelist.txt
    insertafter: EOF
    line: "{{ item }}"
  when: inventory_hostname in groups.loadbalancers_controlplane
  with_items:
    - ".docker.io"
    - ".docker.com"

- name: reconfigure squid
  command: squid -k reconfigure
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: import fluentd image to the local registry
  command: /usr/local/bin/oc import-image docker.io/fluent/fluentd:v1.5-1 --confirm --reference-policy=local
  when: inventory_hostname == groups.masters[0]

- name: pause to allow image import
  pause:
    seconds: 30

- name: Remove .docker.io and .docker.com for fluentd image import
  lineinfile:
    path: /etc/squid/sites.whitelist.txt
    state: absent
    regexp: '^{{ item }}'
  when: inventory_hostname in groups.loadbalancers_controlplane
  with_items:
    - ".docker.io"
    - ".docker.com"

- name: reconfigure squid
  command: squid -k reconfigure
  when: inventory_hostname in groups.loadbalancers_controlplane

- name: allow imagestream to be used in deployment
  command: /usr/local/bin/oc set image-lookup fluentd
  when: inventory_hostname == groups.masters[0]

- name: Setup deployment config for fluent
  template:
    src: squid-deployment.j2
    dest: /home/cloud-user/squid-deployment.yml
  when: inventory_hostname == groups.masters[0]

- name: Create squid deployment
  command: /usr/local/bin/oc create -f /home/cloud-user/squid-deployment.yml
  when: inventory_hostname == groups.masters[0] 
