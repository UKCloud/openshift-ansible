- name: Setup tier1 storage class file
  template:
    src: templates/storage-class-tier1.j2
    dest: ~/storage-class-tier1.yml
    force: yes
    backup: yes

- name: create tier1 storage class 
  command: /usr/local/bin/oc create -f ~/storage-class-tier1.yml

- name: Enable volume expansion for tier2 storage class
  command: /usr/local/bin/oc patch sc tier2 -p '{"allowVolumeExpansion":true}'

- name: Give admin rights
  command: /usr/local/bin/oc adm policy --config=/etc/origin/master/admin.kubeconfig add-cluster-role-to-user cluster-admin admin

- name: Fix kibana URLs
  command: /usr/local/bin/oc annotate ns {{ item }} --overwrite "openshift.io/logging.ui.hostname"="kibana.{{ domainSuffix }}"
  with_items: 
    - default
    - openshift-infra
    - kube-system
    - openshift
  when: installLogging

- name: Label privileged namespaces
  command: /usr/local/bin/oc label namespace {{ item }} state=privileged
  with_items:
    - default
    - kube-service-catalog
    - openshift-monitoring

- name: Setup netpol files
  template:
    src: templates/netpol.j2
    dest: ~/netpol.yml
    force: yes
    backup: yes

- name: Register projects to create policy in
  shell: /usr/local/bin/oc get projects | egrep -v '(default)|(openshift-monitoring)|(kube-service-catalog)|(NAME)' | awk '{print $1}'
  register: netpol_projects

- name: Create netpol objects in projects
  command: /usr/local/bin/oc create -f ~/netpol.yml -n {{ item }}
  with_items: "{{ netpol_projects.stdout_lines }}"

- name: Create registry.cert file
  shell: cat fullchain.pem privkey.pem > registry.cert
  args:
    chdir: "/home/cloud-user/*.{{ domainSuffix }}"
  delegate_to: 127.0.0.1
  run_once: yes
  when: getCertificates

- name: Move registry.cert across to masters[0]
  copy:
    src: /home/cloud-user/*.{{ domainSuffix }}/registry.cert
    dest: /home/cloud-user/registry.cert
    owner: cloud-user
    mode: 0644 
  when: getCertificates

- name: Create registry cert secret
  command: /usr/local/bin/oc secrets new console-secret /home/cloud-user/registry.cert -n default
  when: getCertificates

- name: Mount secret to registry console container and trigger new deploy
  command: /usr/local/bin/oc set volume dc/registry-console --add --type=secret --secret-name=console-secret -m /etc/cockpit/ws-certs.d -n default
  when: getCertificates

- name: Create 'monitoring' serviceaccount for monitoring use
  command: /usr/local/bin/oc create serviceaccount monitoring -n openshift-infra

- name: Give 'monitoring' service account correct permissions
  command: /usr/local/bin/oc adm policy add-cluster-role-to-user cluster-reader system:serviceaccount:openshift-infra:monitoring

- name: Patch nodeSelector into metrics-server deployment
  command: /usr/local/bin/oc patch deployment.apps/metrics-server -p '{"spec":{"template":{"spec":{"nodeSelector":{"infra":"'"true"'"}}}}}' -n openshift-metrics-server

- include_tasks: routers.yml

- include_tasks: squid-whitelist.yml
  when: multinetwork
