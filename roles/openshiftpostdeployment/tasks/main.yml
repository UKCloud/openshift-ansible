- name: Setup tier-1 storage class file
  template:
    src: templates/storage-class-tier1.j2
    dest: ~/storage-class-tier1.yml
    force: yes
    backup: yes

- name: Setup tier-2 storage class file
  template:
    src: templates/storage-class-tier2.j2
    dest: ~/storage-class-tier2.yml
    force: yes
    backup: yes

#- name: create tier-1 class 
#  command: /usr/local/bin/oc create -f ~/storage-class-tier1.yml
#
#- name: create tier-2 class 
#  command: /usr/local/bin/oc create -f ~/storage-class-tier2.yml

- name: Give admin rights
  command: /usr/local/bin/oc adm policy --config=/etc/origin/master/admin.kubeconfig add-cluster-role-to-user cluster-admin admin

- name: Fix kibana URLs
  command: /usr/local/bin/oc annotate ns {{ item }} --overwrite "openshift.io/logging.ui.hostname"="kibana.{{ domainSuffix }}"
  with_items: 
    - default
    - openshift-infra
    - kube-system
    - openshift
  when: installLogging == True

- name: Create registry.cert file
  local_action: shell cd /home/cloud-user/ocp.{{ domainSuffix }} ; cat fullchain1.pem privkey1.pem > registry.cert
  when: getCertificates == True

- name: Move registry.cert across to masters[0]
  copy:
    src: /home/cloud-user/ocp.{{ domainSuffix }}/registry.cert
    dest: /home/cloud-user/registry.cert
    owner: cloud-user
    mode: 0644 
  when: getCertificates == True 

- name: Change to default project
  command: /usr/local/bin/oc project default
  when: getCertificates == True

- name: Create registry cert secret
  command: /usr/local/bin/oc secrets new console-secret /home/cloud-user/registry.cert
  when: getCertificates == True

- name: Mount secret to registry console container and trigger new deploy
  command: /usr/local/bin/oc volume dc/registry-console --add --type=secret --secret-name=console-secret -m /etc/cockpit/ws-certs.d
  when: getCertificates == True
