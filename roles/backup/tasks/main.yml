- name: Download epel repo rpm
  get_url:
    url: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    dest: /tmp/epel-release-latest-7.noarch.rpm
  when: inventory_hostname == 'localhost'

- name: Set permissions on downloaded rpm.
  file:
    path: /tmp/epel-release-latest-7.noarch.rpm
    mode: 0777
  when: inventory_hostname == 'localhost'

- name: Install epel repo
  yum:
    name: /tmp/epel-release-latest-7.noarch.rpm
    state: present
  become: yes
  become_method: sudo
  when: inventory_hostname == 'localhost'

- name: Remove epel file
  file:
    path: /tmp/epel-release-latest-7.noarch.rpm
    state: absent
  when: inventory_hostname == 'localhost'

- name: Install pip
  yum:
    name: python-pip
    state: latest
  when: inventory_hostname == 'localhost'

- name: Lock down epel repo to pip only
  lineinfile: 
    path: /etc/yum.repos.d/epel/repo
    insertafter: '^enabled=1'
    line: includepkgs=python2-pip*
  become: yes
  become_method: sudo
  when: inventory_hostname == 'localhost'

- name: Copy /etc/origin/master directory and tar it
  archive:
    path: /etc/origin/master
    dest: /home/cloud-user/master.tar
    format: tar
  when: inventory_hostname == groups.masters[0]

- name: Copy /etc/etcd/ca directory and tar it
  archive:
    path: /etc/etcd/
    dest: /home/cloud-user/etcd.tar
    format: tar
  when: inventory_hostname == groups.masters[0]

- name: Fetch tar files back to bastion (master)
  fetch: 
    src: /home/cloud-user/master.tar
    dest: /home/cloud-user/master.tar
    flat: yes
  when: inventory_hostname == groups.masters[0]

- name: Fetch tar files back to bastion (etcd)
  fetch:
    src: /home/cloud-user/etcd.tar
    dest: /home/cloud-user/etcd.tar
    flat: yes
  when: inventory_hostname == groups.masters[0]

- name: Send master tar file back to bucket in S3
  aws_s3:
    aws_access_key: "{{ s3accesskey }}"
    aws_secret_key: "{{ s3secretkey }}"
    s3_url: "https://{{ s3regionendpoint }}"
    bucket: "{{ s3bucketname }}"
    object: "/backups/master.tar-{{ ansible_date_time.date }}"
    src: "/home/cloud-user/master.tar"
    mode: put
    rgw: true
  when: inventory_hostname == 'localhost'

- name: Send etcd tar file back to bucket in S3
  aws_s3:
    aws_access_key: "{{ s3accesskey }}"
    aws_secret_key: "{{ s3secretkey }}"
    s3_url: "https://{{ s3regionendpoint }}"
    bucket: "{{ s3bucketname }}"
    object: "/backups/etcd.tar-{{ ansible_date_time.date }}"
    src: "/home/cloud-user/etcd.tar"
    mode: put
    rgw: true
  when: inventory_hostname == 'localhost'

- name: Send ansible hosts file back to bucket in S3
  aws_s3:
    aws_access_key: "{{ s3accesskey }}"
    aws_secret_key: "{{ s3secretkey }}"
    s3_url: "https://{{ s3regionendpoint }}"
    bucket: "{{ s3bucketname }}"
    object: "/backups/hostfile-{{ ansible_date_time.date }}"
    src: "/usr/share/ansible/openshift-deployment-ansible/openshift-ansible-hosts"
    mode: put
    rgw: true
  when: inventory_hostname == 'localhost'
