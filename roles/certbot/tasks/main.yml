- name: Stop keepalived service on second node
  systemd:
    name: keepalived
    state: stopped
    enabled: yes
  when: inventory_hostname == groups.loadbalancers_controlplane[1]
  become: yes
  become_method: sudo
  
- name: Enable optional and extras repos
  command: subscription-manager repos --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-optional-rpms
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Download epel repo rpm
  get_url:
    url: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    dest: /tmp/epel-release-latest-7.noarch.rpm
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Set permissions on downloaded rpm.
  file:
    path: /tmp/epel-release-latest-7.noarch.rpm
    mode: 0777
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Install epel repo
  yum:
    name: /tmp/epel-release-latest-7.noarch.rpm
    state: present
  become: yes
  become_method: sudo
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Install certbot
  yum:
    name: certbot
    state: latest
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Stop HAProxy
  systemd:
    name: haproxy
    state: stopped
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Run certbot
  command: certbot certonly -m openshift@ukcloud.com --standalone -d ocp.{{ domainSuffix }},hawkular-metrics.{{ domainSuffix }},registry-console-default.{{ domainSuffix }},kibana.{{ domainSuffix }} --agree-tos -n
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Start HAProxy
  systemd:
    name: haproxy
    state: started
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Restart keepalived service on second node
  systemd:
    name: keepalived
    state: started
    enabled: yes
  when: inventory_hostname == groups.loadbalancers_controlplane[1]
  become: yes
  become_method: sudo

- name: find certs to copy back
  find:
    paths: /etc/letsencrypt/archive/ocp.{{ domainSuffix }}
  register: certs_to_copy
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: copy certs back
  fetch:
    src: "{{ item.path }}"
    dest: /home/cloud-user/ocp.{{ domainSuffix }}/
    flat: yes
  with_items: "{{ certs_to_copy.files }}"
  when: inventory_hostname == groups.loadbalancers_controlplane[0]

- name: Update inventory file with certificate details for cluster and metrics
  blockinfile:
    path: /usr/share/ansible/openshift-deployment-ansible/openshift-ansible-hosts
    backup: yes
    insertafter: openshift_metrics_cassandra_pvc_size=.
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Setup cluster certificate configuration"
    block: |
      openshift_master_overwrite_named_certificates=true
      openshift_master_named_certificates=[{"certfile": "/home/cloud-user/ocp.{{ domainSuffix }}/fullchain1.pem", "keyfile": "/home/cloud-user/ocp.{{ domainSuffix }}/privkey1.pem", "names": ["ocp.{{ domainSuffix }}"], "cafile": "/home/cloud-user/ocp.{{ domainSuffix }}/chain1.pem"}]
      openshift_metrics_hawkular_cert="/home/cloud-user/ocp.{{ domainSuffix  }}/fullchain1.pem"
      openshift_metrics_hawkular_key="/home/cloud-user/ocp.{{ domainSuffix  }}/privkey1.pem"
      openshift_logging_kibana_cert="/home/cloud-user/ocp.{{ domainSuffix }}/fullchain1.pem"
      openshift_logging_kibana_key="/home/cloud-user/ocp.{{ domainSuffix }}/privkey1.pem"
      openshift_logging_kibana_ca="/home/cloud-user/ocp.{{ domainSuffix }}/chain1.pem"
  when: inventory_hostname == 'localhost'

- name: Refresh inventory to pick up additions above
  meta: refresh_inventory
