# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
etcd
nodes
loadbalancers

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user=cloud-user
ansible_become=yes

debug_level=2

# If ansible_ssh_user is not root, ansible_become must be set to true
#ansible_become=true

deployment_type=openshift-enterprise

os_sdn_network_plugin_name=redhat/openshift-ovs-multitenant

# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users={'admin': '$apr1$mSg5YHIt$TSWms4a24FdbZbqiGPJvc/', 'demo': '$apr1$kxv5vr/4$Y6gc7iyLEa7kvG.DaYwrc/'}

openshift_master_cluster_method=native
openshift_master_cluster_hostname=console.{{ env_details.domainSuffix }}
openshift_master_cluster_public_hostname=ocp.{{ env_details.domainSuffix }}

openshift_set_hostname=true

openshift_master_default_subdomain={{ env_details.domainSuffix }}

# Set the MTU size for the Docker0 bridge and docker native containers
openshift_docker_options="--mtu=1400  --log-driver=journald"

# ROUTER
openshift_hosted_router_selector='router=true'

# REGISTRY
openshift_hosted_registry_selector='purpose=tenant'
openshift_hosted_registry_replicas=1
openshift_hosted_registry_storage_kind=openstack
openshift_hosted_registry_storage_access_modes=['ReadWriteOnce']
openshift_hosted_registry_storage_openstack_filesystem=ext4
openshift_hosted_registry_storage_openstack_volumeID={{ env_details.registryVolume }}
openshift_hosted_registry_storage_volume_size={{ env_details.registryVolumeSize }}

osm_default_node_selector='purpose=tenant'

# enable ntp on masters to ensure proper failover
openshift_clock_enabled=true

# openstack cinder integration for persistant volume claims
openshift_cloudprovider_kind=openstack
openshift_cloudprovider_openstack_auth_url={{ env_details.osAuthUrl }}
openshift_cloudprovider_openstack_username={{ env_details.openstackOpenshiftUsername}}
openshift_cloudprovider_openstack_password={{ env_details.openstackOpenshiftPassword }}
openshift_cloudprovider_openstack_tenant_id={{ env_details.osTenantId }}
openshift_cloudprovider_openstack_tenant_name={{ env_details.osTenantName }}
openshift_cloudprovider_openstack_region={{ env_details.osRegion }}


# openshift stats deployment - comment out if no stats deployment is required. this will run on the worker nodes
openshift_hosted_metrics_deploy=true
openshift_hosted_metrics_public_url=https://hawkular-metrics.{{ env_details.domainSuffix }}/hawkular/metrics
openshift_hosted_metrics_storage_kind=dynamic
openshift_metrics_cassandra_pvc_size=50Gi

# Create an OSEv3 group that contains the masters and nodes groups
# host group for masters
[masters]
{% for ip, hostname in env_details.master_details.items() %}
{{ hostname }}.openstacklocal
{% endfor %}

[etcd]
{% for ip, hostname in env_details.master_details.items() %}
{{ hostname }}.openstacklocal
{% endfor %}

[loadbalancers]
{% for ip, hostname in env_details.haproxy_details.items() %}
{{ hostname }}.openstacklocal
{% endfor %}

# host group for nodes, includes region info
# Routers are placed only on first 3 workers
[nodes]
{% for ip, hostname in env_details.worker_details.items() %}
{% if hostname | match('.*-[012].*') %}
{{ hostname }}.openstacklocal openshift_node_labels="{'router':'true','purpose':'tenant'}"
{% else %}
{{ hostname }}.openstacklocal openshift_node_labels="{'purpose':'tenant'}"
{% endif %}
{% endfor %}

