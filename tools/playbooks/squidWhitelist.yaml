---
- import_playbook: installPip.yaml

- hosts: localhost, loadbalancers_controlplane
  tasks:
  - name: Retrieve whitelist from ECS
    aws_s3:
      aws_access_key: "{{ s3accesskey }}"
      aws_secret_key: "{{ s3secretkey }}"
      s3_url: "https://{{ s3regionendpoint }}"
      bucket: "{{ s3bucketname }}"
      mode: get
      object: /squid/sites.whitelist.txt
      dest: /tmp/sites.whitelist.txt
    when: inventory_hostname == 'localhost'
      
  - name: Get downloaded file attributes
    stat:
      path: /tmp/sites.whitelist.txt
      checksum_algorithm: sha256
    register: latest_file
    when: inventory_hostname == 'localhost'

  - name: Get existing file attributes
    stat:
      path: /home/cloud-user/sites.whitelist.txt
      checksum_algorithm: sha256
    register: existing_file
    when: inventory_hostname == 'localhost'

  - name: Copy file if it doesn't exist or has changed
    copy:
      src: /tmp/sites.whitelist.txt
      dest: /home/cloud-user/sites.whitelist.txt    
    register: file_copy
    when: inventory_hostname == 'localhost' and (not existing_file.stat.exists or (existing_file.stat.exists and latest_file.stat.checksum != existing_file.stat.checksum))

  - name: Insert changed block to /etc/squid/sites.whitelist.txt
    blockinfile:
      block: "{{ lookup('file', '/home/cloud-user/sites.whitelist.txt') }}"
      path: /etc/squid/sites.whitelist.txt
      insertafter: EOF
      marker: "# {mark} ANSIBLE MANAGED BLOCK - User whitelisted domains #"
    become: yes
    when: inventory_hostname in groups.loadbalancers_controlplane and hostvars['localhost']['file_copy']['changed']
    notify:
      - reconfigure squid

  handlers:
    - name: reconfigure squid
      command: /usr/sbin/squid -k reconfigure
      become: yes
      when: inventory_hostname in groups.loadbalancers_controlplane